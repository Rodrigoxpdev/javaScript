---------------Método para colocar todas letras em maiúsculas---------------
document.write(`Seu nome em maiusculo é ${nome.toUpperCase()}`)



---------------Método para colocar todas letras em minúsculas---------------
document.write(`Seu nome em minusculo é ${nome.toLowerCase()}`)



------------------metodo para formatar numeros ------------------
toFixed(2) colocando duas casas decimal

toFixed(2).replace('.' , ',')   substituindo . por ,

   localizada onde:         stilo: dinheiro  forma do dinheiro desejado
n1.toLocaleString('pt-BR', {style: 'currency',  currency: 'BRL'})    string localizada 


=========COMO INPORTAR UM JS EXTERNO============================
<script src="funçoes/function.js"></script>



=========VARIAVEIS EM JS========= 
NUMBER: NUMEROS INTEIROS E FRACIONADOS
infinity:
NaN:


-----------------------------------
STRING: CONJUNTO COMPOSTO DE NUMEROS , - ETC...



-----------------------------------
BOOLEAN: FALSE, TRUE = VERDADEIRO OU FALSO





-----------------------------------
// ARMAZENANDO DADOS USANDO CONST OU LET
// O SINAL DE = EM JS TEM O SENTIDO DE RECEBER ALGO
// EX: CONST VAGAA1 = "CARRO1"  =  A VAGA ESTA "RECEBENDO = " O VALOR CARRO 
// VAGAA1 = NULL  NULO OU SEJA NAO RECEBE VALOR NENHUM 




//==========COMO SABER OS TIPOS DAS VARIAVEIS NUMBER  ETC...==============================
typeof:

EX1: const m =  "53"
typeof m = string PORQUE ESTÁ DENTRO DE "" TUDO DE QUE ESTIVER DENTRO DE "" É STRING

EX2: const n = 53
typeof n = number  = PORQUE ESTÁ FORRA DO "" 

OBS: COLOCANDO O typeof PODERA SABER O TIPO DE CADA UM DELES INDEPENDENTE DE QUAL SEJA!

-----------------------------------------------------------------------------------------

======COMO SOMAR EM JS=============== 
COLOCANDO O NUMBER NA FRENTE DO (window.prompt("Digite um número")); 
O JS VAI RECONHECER AUTOMATICAMENTE SE E NUMERO OU STRING

const n1 = Number(window.prompt("Digite um número"));
const n2 = Number(window.prompt("Digite outro número"));
const s = n1 + n2;
window.alert(`A soma de ${n1} + ${n2} é igual a ${s}`);

----------------------------------------------------------------------------------------





























